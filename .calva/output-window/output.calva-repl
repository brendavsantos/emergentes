; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Starting Jack-in Terminal: pushd /home/brenda/Documentos/UNB/TPPE/emergentes ; lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless ; popd
; Using host:port 127.0.0.1:42363 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉emergentes.core꞉>  ; Use `alt+enter` to evaluate
clj꞉emergentes.core꞉> 
; Jack-in done.
clj꞉emergentes.core꞉> 
; Syntax error compiling at (core_test.clj:34:1).
; Unable to resolve symbol: completeAuthor-test in this context
clj꞉emergentes.core-test꞉> 
; Syntax error compiling at (core_test.clj:34:1).
; Unable to resolve symbol: completeAuthor-test in this context
clj꞉emergentes.core-test꞉> 
; Syntax error compiling at (core_test.clj:33:1).
; Unable to resolve symbol: run-tests in this context
clj꞉emergentes.core-test꞉> 
; Evaluating file: core_test.clj

Testing emergentes.core-test

FAIL in (wrongIdentifier-test) (core_test.clj:28)
Verificar a completude usando os dois identificadores ou nenhum
expected: (= 0 (completeness-identifier {:name "Sergio", :identifier.lattes "1156310", :identifier.orcid "37023"} 5.0))
  actual: (not (= 0 5.0))

FAIL in (incompleteAuthor-test) (core_test.clj:16)
Verificar a completude de um autor com campos faltando
expected: (= 0.2 (completeness-author {:name "Brenda", :birthCountry "Brasil"} 5.0))
  actual: (not (= 0.2 1.0))

Ran 4 tests containing 6 assertions.
2 failures, 0 errors.
nil
clj꞉emergentes.core-test꞉> 
nil
clj꞉emergentes.core-test꞉> 

Testing emergentes.core-test

FAIL in (wrongIdentifier-test) (core_test.clj:28)
Verificar a completude usando os dois identificadores ou nenhum
expected: (= 0 (completeness-identifier {:name "Sergio", :identifier.lattes "1156310", :identifier.orcid "37023"} 5.0))
  actual: (not (= 0 5.0))

FAIL in (incompleteAuthor-test) (core_test.clj:16)
Verificar a completude de um autor com campos faltando
expected: (= 0.2 (completeness-author {:name "Brenda", :birthCountry "Brasil"} 5.0))
  actual: (not (= 0.2 1.0))

Ran 4 tests containing 6 assertions.
2 failures, 0 errors.
{:test 4, :pass 4, :fail 2, :error 0, :type :summary}
clj꞉emergentes.core-test꞉> 
nil
clj꞉emergentes.core-test꞉> 

FAIL in (incompleteAuthor-test) (core_test.clj:16)
Verificar a completude de um autor com campos faltando
expected: (= 0.2 (completeness-author {:name "Brenda", :birthCountry "Brasil"} 5.0))
  actual: (not (= 0.2 1.0))
nil
clj꞉emergentes.core-test꞉> 
nil
clj꞉emergentes.core-test꞉> 

FAIL in (wrongIdentifier-test) (core_test.clj:28)
Verificar a completude usando os dois identificadores ou nenhum
expected: (= 0 (completeness-identifier {:name "Sergio", :identifier.lattes "1156310", :identifier.orcid "37023"} 5.0))
  actual: (not (= 0 5.0))
nil
clj꞉emergentes.core-test꞉> 
nil
clj꞉emergentes.core-test꞉> 
nil
clj꞉emergentes.core-test꞉> 
nil
clj꞉emergentes.core-test꞉> 

FAIL in (incompleteAuthor-test) (core_test.clj:16)
Verificar a completude de um autor com campos faltando
expected: (= 0.2 (completeness-author {:name "Brenda", :birthCountry "Brasil"} 5.0))
  actual: (not (= 0.2 1.0))
nil
clj꞉emergentes.core-test꞉> 
nil
clj꞉emergentes.core-test꞉> 

FAIL in (wrongIdentifier-test) (core_test.clj:28)
Verificar a completude usando os dois identificadores ou nenhum
expected: (= 0 (completeness-identifier {:name "Sergio", :identifier.lattes "1156310", :identifier.orcid "37023"} 5.0))
  actual: (not (= 0 5.0))
nil
clj꞉emergentes.core-test꞉> 

Testing emergentes.core-test

FAIL in (wrongIdentifier-test) (core_test.clj:28)
Verificar a completude usando os dois identificadores ou nenhum
expected: (= 0 (completeness-identifier {:name "Sergio", :identifier.lattes "1156310", :identifier.orcid "37023"} 5.0))
  actual: (not (= 0 5.0))

FAIL in (incompleteAuthor-test) (core_test.clj:16)
Verificar a completude de um autor com campos faltando
expected: (= 0.2 (completeness-author {:name "Brenda", :birthCountry "Brasil"} 5.0))
  actual: (not (= 0.2 1.0))

Ran 4 tests containing 6 assertions.
2 failures, 0 errors.
{:test 4, :pass 4, :fail 2, :error 0, :type :summary}
clj꞉emergentes.core-test꞉> 

Testing emergentes.core-test

FAIL in (wrongIdentifier-test) (core_test.clj:28)
Verificar a completude usando os dois identificadores ou nenhum
expected: (= 0 (completeness-identifier {:name "Sergio", :identifier.lattes "1156310", :identifier.orcid "37023"} 5.0))
  actual: (not (= 0 5.0))

FAIL in (incompleteAuthor-test) (core_test.clj:16)
Verificar a completude de um autor com campos faltando
expected: (= 0.2 (completeness-author {:name "Brenda", :birthCountry "Brasil"} 5.0))
  actual: (not (= 0.2 1.0))

Ran 4 tests containing 6 assertions.
2 failures, 0 errors.
{:test 4, :pass 4, :fail 2, :error 0, :type :summary}
clj꞉emergentes.core-test꞉> 

Testing emergentes.core-test

FAIL in (wrongIdentifier-test) (core_test.clj:28)
Verificar a completude usando os dois identificadores ou nenhum
expected: (= 0 (completeness-identifier {:name "Sergio", :identifier.lattes "1156310", :identifier.orcid "37023"} 5.0))
  actual: (not (= 0 5.0))

FAIL in (incompleteAuthor-test) (core_test.clj:16)
Verificar a completude de um autor com campos faltando
expected: (= 0.2 (completeness-author {:name "Brenda", :birthCountry "Brasil"} 5.0))
  actual: (not (= 0.2 1.0))

Ran 4 tests containing 6 assertions.
2 failures, 0 errors.
{:test 4, :pass 4, :fail 2, :error 0, :type :summary}
clj꞉emergentes.core-test꞉> 
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Starting Jack-in Terminal: pushd /home/brenda/Documentos/UNB/TPPE/emergentes ; lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless ; popd
; nREPL Connection was closed
; Using host:port 127.0.0.1:42955 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉emergentes.core꞉> 
clj꞉emergentes.core꞉> 
; Jack-in done.
clj꞉emergentes.core꞉> 
; Evaluating file: core_test.clj

Testing emergentes.core-test

FAIL in (wrongIdentifier-test) (core_test.clj:29)
Verificar a completude usando os dois identificadores ou nenhum
expected: (= 0 (completeness-identifier {:name "Sergio", :identifier.lattes "1156310", :identifier.orcid "37023"} 5.0))
  actual: (not (= 0 5.0))

FAIL in (incompleteAuthor-test) (core_test.clj:16)
Verificar a completude de um autor com campos faltando
expected: (= 0.2 (completeness-author {:name "Brenda", :birthCountry "Brasil"} 5.0))
  actual: (not (= 0.2 1.0))

Ran 4 tests containing 6 assertions.
2 failures, 0 errors.

FAIL in (incompleteAuthor-test) (core_test.clj:16)
Verificar a completude de um autor com campos faltando
expected: (= 0.2 (completeness-author {:name "Brenda", :birthCountry "Brasil"} 5.0))
  actual: (not (= 0.2 1.0))

FAIL in (wrongIdentifier-test) (core_test.clj:29)
Verificar a completude usando os dois identificadores ou nenhum
expected: (= 0 (completeness-identifier {:name "Sergio", :identifier.lattes "1156310", :identifier.orcid "37023"} 5.0))
  actual: (not (= 0 5.0))
nil
clj꞉emergentes.core-test꞉> 
; Evaluating file: core.clj
(78.75 79.16666666666667 80.0 78.125 78.57142857142857 85.0 81.66666666666667 76.53846153846153 76.17647058823529 77.0)
clj꞉emergentes.core꞉> 
; Evaluating file: core_test.clj

Testing emergentes.core-test

FAIL in (incompleteAuthor-test) (core_test.clj:16)
Verificar a completude de um autor com campos faltando
expected: (= 0.2 (completeness-author {:name "Brenda", :birthCountry "Brasil"} 5.0))
  actual: (not (= 0.2 1.0))

Ran 4 tests containing 6 assertions.
1 failures, 0 errors.

FAIL in (incompleteAuthor-test) (core_test.clj:16)
Verificar a completude de um autor com campos faltando
expected: (= 0.2 (completeness-author {:name "Brenda", :birthCountry "Brasil"} 5.0))
  actual: (not (= 0.2 1.0))
nil
clj꞉emergentes.core-test꞉> 
#'emergentes.core-test/wrongIdentifier-test
clj꞉emergentes.core-test꞉> 

Testing emergentes.core-test

FAIL in (incompleteAuthor-test) (core_test.clj:16)
Verificar a completude de um autor com campos faltando
expected: (= 0.2 (completeness-author {:name "Brenda", :birthCountry "Brasil"} 5.0))
  actual: (not (= 0.2 1.0))

Ran 4 tests containing 6 assertions.
1 failures, 0 errors.
{:test 4, :pass 5, :fail 1, :error 0, :type :summary}
clj꞉emergentes.core-test꞉> 

Testing emergentes.core-test

FAIL in (incompleteAuthor-test) (core_test.clj:16)
Verificar a completude de um autor com campos faltando
expected: (= 0.2 (completeness-author {:name "Brenda", :birthCountry "Brasil"} 5.0))
  actual: (not (= 0.2 1.0))

Ran 4 tests containing 6 assertions.
1 failures, 0 errors.
{:test 4, :pass 5, :fail 1, :error 0, :type :summary}
clj꞉emergentes.core-test꞉> 
; Evaluating file: core_test.clj

Testing emergentes.core-test

Ran 4 tests containing 6 assertions.
0 failures, 0 errors.
nil
clj꞉emergentes.core-test꞉> 
; Evaluating file: core_test.clj

Testing emergentes.core-test

Ran 4 tests containing 7 assertions.
0 failures, 0 errors.
nil
clj꞉emergentes.core-test꞉> 
; Evaluating file: core_test.clj

Testing emergentes.core-test

FAIL in (incompleteAuthor-test) (core_test.clj:15)
Verificar a completude de um autor com campos faltando
expected: (= 1.0 (completeness-author {:birthCountry "Brasil", :birthCity "Porto Alegre", :birthState "Goias"} 5.0))
  actual: (not (= 1.0 3.0))

FAIL in (incompleteAuthor-test) (core_test.clj:18)
Verificar a completude de um autor com campos faltando
expected: (= 1.0 (completeness-author {:birthCountry "Brasil", :identifier.lattes "310369"} 5.0))
  actual: (not (= 1.0 2.0))

FAIL in (incompleteAuthor-test) (core_test.clj:20)
Verificar a completude de um autor com campos faltando
expected: (= 1.0 (completeness-author {:birthCountry "Brasil", :identifier.orcid "130325"} 5.0))
  actual: (not (= 1.0 2.0))

FAIL in (incompleteAuthor-test) (core_test.clj:23)
Verificar a completude de um autor com campos faltando
expected: (= 1.0 (completeness-author {:birthCountry "Brasil", :nationality "Brasileira", :identifier.orcid "677232"} 5.0))
  actual: (not (= 1.0 3.0))

Ran 4 tests containing 11 assertions.
4 failures, 0 errors.

FAIL in (incompleteAuthor-test) (core_test.clj:15)
Verificar a completude de um autor com campos faltando
expected: (= 1.0 (completeness-author {:birthCountry "Brasil", :birthCity "Porto Alegre", :birthState "Goias"} 5.0))
  actual: (not (= 1.0 3.0))

FAIL in (incompleteAuthor-test) (core_test.clj:18)
Verificar a completude de um autor com campos faltando
expected: (= 1.0 (completeness-author {:birthCountry "Brasil", :identifier.lattes "310369"} 5.0))
  actual: (not (= 1.0 2.0))

FAIL in (incompleteAuthor-test) (core_test.clj:20)
Verificar a completude de um autor com campos faltando
expected: (= 1.0 (completeness-author {:birthCountry "Brasil", :identifier.orcid "130325"} 5.0))
  actual: (not (= 1.0 2.0))

FAIL in (incompleteAuthor-test) (core_test.clj:23)
Verificar a completude de um autor com campos faltando
expected: (= 1.0 (completeness-author {:birthCountry "Brasil", :nationality "Brasileira", :identifier.orcid "677232"} 5.0))
  actual: (not (= 1.0 3.0))
nil
clj꞉emergentes.core-test꞉> 
; Evaluating file: core_test.clj

Testing emergentes.core-test

Ran 4 tests containing 11 assertions.
0 failures, 0 errors.
nil
clj꞉emergentes.core-test꞉> 
; Evaluating file: core_test.clj

Testing emergentes.core-test

Ran 4 tests containing 12 assertions.
0 failures, 0 errors.
nil
clj꞉emergentes.core-test꞉> 
